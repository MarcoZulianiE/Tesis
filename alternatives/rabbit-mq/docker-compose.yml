version: "3.8"

networks:
  store_net:
    driver: bridge
  transportation_net:
    driver: bridge
  messaging_net:
    driver: bridge
  rabbit_net:
    driver: bridge

services:
  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbit_net
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 15s
      timeout: 5s
      retries: 5

  store_api:
    build: ../../api/store
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=store_db
      - DB_PORT=5432
      - DB_NAME=store
    ports:
      - "3000:3000"
    networks:
      - store_net
    depends_on:
      store_db:
        condition: service_healthy

  store_db:
    image: "postgres:13"
    environment:
      - POSTGRES_DB=store
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - store_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  transportation_api:
    build: ../../api/transportation
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=transportation_db
      - DB_PORT=5432
      - DB_NAME=transportation
    ports:
      - "3001:3001"
    networks:
      - transportation_net
    depends_on:
      transportation_db:
        condition: service_healthy

  transportation_db:
    image: "postgres:13"
    environment:
      - POSTGRES_DB=transportation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    networks:
      - transportation_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  messaging_api:
    build: ../../api/messaging
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=messaging_db
      - DB_PORT=5432
      - DB_NAME=messaging
    ports:
      - "3002:3002"
    networks:
      - messaging_net
    depends_on:
      messaging_db:
        condition: service_healthy

  messaging_db:
    image: "postgres:13"
    environment:
      - POSTGRES_DB=messaging
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    networks:
      - messaging_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  store_server:
    build: ./store
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_PROTOCOL=amqp
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - STORE_API=http://store_api:3000
    ports:
      - "4000:4000"
    networks:
      - store_net
      - rabbit_net
    depends_on:
      rabbitmq:
        condition: service_healthy

  transportation_server:
    build: ./transportation
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_PROTOCOL=amqp
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - TRANSPORTATION_API=http://transportation_api:3001
    ports:
      - "4001:4000"
    networks:
      - transportation_net
      - rabbit_net
    depends_on:
      rabbitmq:
        condition: service_healthy

  messaging_server:
    build: ./messaging
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_PROTOCOL=amqp
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - MESSAGING_API=http://messaging_api:3002
    ports:
      - "4002:4000"
    networks:
      - messaging_net
      - rabbit_net
    depends_on:
      rabbitmq:
        condition: service_healthy
