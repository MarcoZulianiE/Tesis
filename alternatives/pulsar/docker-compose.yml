version: "3.8"

networks:
  store_net:
    driver: bridge
  transportation_net:
    driver: bridge
  messaging_net:
    driver: bridge
  pulsar_net:
    driver: bridge

services:
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    networks:
      - pulsar_net
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
               exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD-SHELL", "bin/pulsar-zookeeper-ruok.sh || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  pulsar-init:
    image: apachepulsar/pulsar:latest
    container_name: pulsar-init
    networks:
      - pulsar_net
    depends_on:
      zookeeper:
        condition: service_healthy
    command: >
      bin/pulsar initialize-cluster-metadata
      --cluster cluster-a
      --zookeeper zookeeper:2181
      --configuration-store zookeeper:2181
      --web-service-url http://broker:8080
      --broker-service-url pulsar://broker:6650

  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    networks:
      - pulsar_net
    environment:
      - advertisedAddress=bookie
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      - ensembleSize=1
      - writeQuorum=1
      - ackQuorum=1
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    networks:
      - pulsar_net
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_healthy
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:8080/admin/v2/brokers/health || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  store_api:
    build: ../../api/store
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=store_db
      - DB_PORT=5432
      - DB_NAME=store
    ports:
      - "3000:3000"
    networks:
      - store_net
    depends_on:
      store_db:
        condition: service_healthy

  store_db:
    image: "postgres:13"
    environment:
      - POSTGRES_DB=store
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - store_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  transportation_api:
    build: ../../api/transportation
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=transportation_db
      - DB_PORT=5432
      - DB_NAME=transportation
    ports:
      - "3001:3001"
    networks:
      - transportation_net
    depends_on:
      transportation_db:
        condition: service_healthy

  transportation_db:
    image: "postgres:13"
    environment:
      - POSTGRES_DB=transportation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    networks:
      - transportation_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  messaging_api:
    build: ../../api/messaging
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=messaging_db
      - DB_PORT=5432
      - DB_NAME=messaging
    ports:
      - "3002:3002"
    networks:
      - messaging_net
    depends_on:
      messaging_db:
        condition: service_healthy

  messaging_db:
    image: "postgres:13"
    environment:
      - POSTGRES_DB=messaging
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    networks:
      - messaging_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  store_server:
    build: ./store
    environment:
      - PULSAR_HOST=broker
      - PULSAR_PORT=6650
      - STORE_API=http://store_api:3000
    ports:
      - "4000:4000"
    networks:
      - store_net
      - pulsar_net
    depends_on:
      broker:
        condition: service_healthy

  transportation_server:
    build: ./transportation
    environment:
      - PULSAR_HOST=broker
      - PULSAR_PORT=6650
      - TRANSPORTATION_API=http://transportation_api:3001
    ports:
      - "4001:4000"
    networks:
      - transportation_net
      - pulsar_net
    depends_on:
      broker:
        condition: service_healthy

  messaging_server:
    build: ./messaging
    environment:
      - PULSAR_HOST=broker
      - PULSAR_PORT=6650
      - MESSAGING_API=http://messaging_api:3002
    ports:
      - "4002:4000"
    networks:
      - messaging_net
      - pulsar_net
    depends_on:
      broker:
        condition: service_healthy
